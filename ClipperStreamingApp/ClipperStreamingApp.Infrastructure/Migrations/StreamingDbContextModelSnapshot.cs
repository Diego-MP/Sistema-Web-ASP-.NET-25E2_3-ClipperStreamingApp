// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClipperStreamingApp.Infrastructure.Migrations
{
    [DbContext(typeof(StreamingDbContext))]
    partial class StreamingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClipperStreamingApp.Domain.Assinatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContaId")
                        .HasColumnType("int");

                    b.Property<int>("PlanoId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ContaId");

                    b.HasIndex("PlanoId");

                    b.ToTable("Assinaturas");
                });

            modelBuilder.Entity("ClipperStreamingApp.Domain.Banda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bandas");
                });

            modelBuilder.Entity("ClipperStreamingApp.Domain.Conta", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Contas");
                });

            modelBuilder.Entity("ClipperStreamingApp.Domain.Musica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BandaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BandaId");

                    b.ToTable("Musicas");
                });

            modelBuilder.Entity("ClipperStreamingApp.Domain.Plano", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Planos");
                });

            modelBuilder.Entity("ClipperStreamingApp.Domain.Playlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContaId");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("ClipperStreamingApp.Domain.Transacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssinaturaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AssinaturaId");

                    b.ToTable("Transacoes");
                });

            modelBuilder.Entity("ClipperStreamingApp.Domain.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PlaylistBanda", b =>
                {
                    b.Property<int>("BandasId")
                        .HasColumnType("int");

                    b.Property<int>("PlaylistId")
                        .HasColumnType("int");

                    b.HasKey("BandasId", "PlaylistId");

                    b.HasIndex("PlaylistId");

                    b.ToTable("PlaylistBanda");
                });

            modelBuilder.Entity("PlaylistMusica", b =>
                {
                    b.Property<int>("MusicasId")
                        .HasColumnType("int");

                    b.Property<int>("PlaylistId")
                        .HasColumnType("int");

                    b.HasKey("MusicasId", "PlaylistId");

                    b.HasIndex("PlaylistId");

                    b.ToTable("PlaylistMusica");
                });

            modelBuilder.Entity("ClipperStreamingApp.Domain.Assinatura", b =>
                {
                    b.HasOne("ClipperStreamingApp.Domain.Conta", "Conta")
                        .WithMany("Assinaturas")
                        .HasForeignKey("ContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClipperStreamingApp.Domain.Plano", "Plano")
                        .WithMany("Assinaturas")
                        .HasForeignKey("PlanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conta");

                    b.Navigation("Plano");
                });

            modelBuilder.Entity("ClipperStreamingApp.Domain.Conta", b =>
                {
                    b.HasOne("ClipperStreamingApp.Domain.Usuario", "Usuario")
                        .WithOne("Conta")
                        .HasForeignKey("ClipperStreamingApp.Domain.Conta", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ClipperStreamingApp.Domain.Musica", b =>
                {
                    b.HasOne("ClipperStreamingApp.Domain.Banda", "Banda")
                        .WithMany("Musicas")
                        .HasForeignKey("BandaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Banda");
                });

            modelBuilder.Entity("ClipperStreamingApp.Domain.Playlist", b =>
                {
                    b.HasOne("ClipperStreamingApp.Domain.Conta", "Conta")
                        .WithMany("Playlists")
                        .HasForeignKey("ContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conta");
                });

            modelBuilder.Entity("ClipperStreamingApp.Domain.Transacao", b =>
                {
                    b.HasOne("ClipperStreamingApp.Domain.Assinatura", "Assinatura")
                        .WithMany("Transacoes")
                        .HasForeignKey("AssinaturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assinatura");
                });

            modelBuilder.Entity("PlaylistBanda", b =>
                {
                    b.HasOne("ClipperStreamingApp.Domain.Banda", null)
                        .WithMany()
                        .HasForeignKey("BandasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClipperStreamingApp.Domain.Playlist", null)
                        .WithMany()
                        .HasForeignKey("PlaylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlaylistMusica", b =>
                {
                    b.HasOne("ClipperStreamingApp.Domain.Musica", null)
                        .WithMany()
                        .HasForeignKey("MusicasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClipperStreamingApp.Domain.Playlist", null)
                        .WithMany()
                        .HasForeignKey("PlaylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClipperStreamingApp.Domain.Assinatura", b =>
                {
                    b.Navigation("Transacoes");
                });

            modelBuilder.Entity("ClipperStreamingApp.Domain.Banda", b =>
                {
                    b.Navigation("Musicas");
                });

            modelBuilder.Entity("ClipperStreamingApp.Domain.Conta", b =>
                {
                    b.Navigation("Assinaturas");

                    b.Navigation("Playlists");
                });

            modelBuilder.Entity("ClipperStreamingApp.Domain.Plano", b =>
                {
                    b.Navigation("Assinaturas");
                });

            modelBuilder.Entity("ClipperStreamingApp.Domain.Usuario", b =>
                {
                    b.Navigation("Conta")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
